JK 
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity JK_FF is
    Port ( J : in STD_LOGIC;
           K : in STD_LOGIC;
           CLK : in STD_LOGIC;
           Q : out STD_LOGIC;
           Qbar : out STD_LOGIC);
end JK_FF;

architecture Behavioral of JK_FF is
    signal temp: STD_LOGIC := '0';
begin
    process(CLK)
    begin
        if rising_edge(CLK) then
            if (J='0' and K='0') then
                temp <= temp;
            elsif (J='0' and K='1') then
                temp <= '0';
            elsif (J='1' and K='0') then
                temp <= '1';
            elsif (J='1' and K='1') then
                temp <= not temp;
            end if;
        end if;
    end process;
    
    Q <= temp;
    Qbar <= not temp;
end Behavioral;

SR
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity SR_FF is
    Port ( S : in STD_LOGIC;
           R : in STD_LOGIC;
           CLK : in STD_LOGIC;
           Q : out STD_LOGIC;
           Qbar : out STD_LOGIC);
end SR_FF;

architecture Behavioral of SR_FF is
    signal temp: STD_LOGIC := '0';
begin
    process(CLK)
    begin
        if rising_edge(CLK) then
            if (S='0' and R='0') then
                temp <= temp;
            elsif (S='0' and R='1') then
                temp <= '0';
            elsif (S='1' and R='0') then
                temp <= '1';
            elsif (S='1' and R='1') then
                temp <= 'X';
            end if;
        end if;
    end process;
    
    Q <= temp;
    Qbar <= not temp;
end Behavioral;

D
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity D_FF is
    Port ( D : in STD_LOGIC;
           CLK : in STD_LOGIC;
           Q : out STD_LOGIC;
           Qbar : out STD_LOGIC);
end D_FF;

architecture Behavioral of D_FF is
    signal temp: STD_LOGIC := '0';
begin
    process(CLK)
    begin
        if rising_edge(CLK) then
            temp <= D;
        end if;
    end process;
    
    Q <= temp;
    Qbar <= not temp;
end Behavioral;