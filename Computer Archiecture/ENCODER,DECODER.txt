2*4 DECODER
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Decoder2to4 is
    Port ( A : in STD_LOGIC_VECTOR (1 downto 0);
           EN : in STD_LOGIC;
           Y : out STD_LOGIC_VECTOR (3 downto 0));
end Decoder2to4;

architecture Behavioral of Decoder2to4 is
begin
    process(A, EN)
    begin
        if EN = '1' then
            case A is
                when "00" => Y <= "0001";
                when "01" => Y <= "0010";
                when "10" => Y <= "0100";
                when "11" => Y <= "1000";
                when others => Y <= "0000";
            end case;
        else
            Y <= "0000";
        end if;
    end process;
end Behavioral;

3*8 DECODER
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Decoder3to8 is
    Port ( A : in STD_LOGIC_VECTOR (2 downto 0);
           EN : in STD_LOGIC;
           Y : out STD_LOGIC_VECTOR (7 downto 0));
end Decoder3to8;

architecture Behavioral of Decoder3to8 is
begin
    process(A, EN)
    begin
        if EN = '1' then
            case A is
                when "000" => Y <= "00000001";
                when "001" => Y <= "00000010";
                when "010" => Y <= "00000100";
                when "011" => Y <= "00001000";
                when "100" => Y <= "00010000";
                when "101" => Y <= "00100000";
                when "110" => Y <= "01000000";
                when "111" => Y <= "10000000";
                when others => Y <= "00000000";
            end case;
        else
            Y <= "00000000";
        end if;
    end process;
end Behavioral;


4*2 ENCODER
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Encoder4to2 is
    Port ( A : in STD_LOGIC_VECTOR (3 downto 0);
           Y : out STD_LOGIC_VECTOR (1 downto 0));
end Encoder4to2;

architecture Behavioral of Encoder4to2 is
begin
    process(A)
    begin
        case A is
            when "0001" => Y <= "00";
            when "0010" => Y <= "01";
            when "0100" => Y <= "10";
            when "1000" => Y <= "11";
            when others => Y <= "00";
        end case;
    end process;
end Behavioral;

8*3 ENCODER
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Encoder8to3 is
    Port ( A : in STD_LOGIC_VECTOR (7 downto 0);
           Y : out STD_LOGIC_VECTOR (2 downto 0));
end Encoder3to8;

architecture Behavioral of Encoder3to8 is
begin
    process(A)
    begin
        case A is
            when "00000001" => Y <= "000";
            when "00000010" => Y <= "001";
            when "00000100" => Y <= "010";
            when "00001000" => Y <= "011";
            when "00010000" => Y <= "100";
            when "00100000" => Y <= "101";
            when "01000000" => Y <= "110";
            when "10000000" => Y <= "111";
            when others => Y <= "000";
        end case;
    end process;
end Behavioral;

